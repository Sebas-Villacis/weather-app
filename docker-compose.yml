version: '3.9'
services:
  # Create frontend container
  frontend:
    container_name: frontend
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./apps/frontend:/app/frontend
      - /app/frontend/node_modules
    ports:
      - ${FRONTEND_PORT}:3000
    # start container in interactive mode
    stdin_open: true
    tty: true
    depends_on:
      - backend
    env_file:
      - .env
  # Create backend container
  backend:
    container_name: backend
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
      # Only will build development stage from our dockerfile
      target: development
    # Mount our host (backend) direcotry to the docker container
    # reflect file changes from host to container
    volumes:
      - ./apps/backend:/app/backend
      - /app/backend/node_modules
    ports:
      - ${BACKEND_PORT}:3333
    depends_on:
      - db
    env_file:
      - .env
    # Run a command against the development stage of the image
    command: npm run start:dev
  # Create database container
  db:
    image: postgres:13
    container_name: db
    restart: always
    ports:
      - ${DB_PORT}:5432
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
